{"mappings":"ACEA,IAAM,EAAY,SAAS,gBAAgB,CAAC,SAG5C,AAFkB,SAAS,gBAAgB,CAAC,UAElC,OAAO,CAAC,SAAC,CAAnB,EAA6B,OAAA,EAAM,kBAAkB,CAAC,aAAc,U,GAIpE,IAAK,IAFC,EAAY,SAAS,gBAAgB,CAAC,SAEnC,EAAI,EAAG,EAAI,EAAU,MAAM,CAAE,IACpC,CAAS,CAAC,EAAE,CAAC,YAAY,CAAC,cAAgB,GAAgC,MAAA,CAA9B,EAAW,CAAS,CAAC,EAAE,CAAC,IAAI,IACxE,CAAS,CAAC,EAAE,CAAC,WAAW,CAAG,EAAW,CAAS,CAAC,EAAE,CAAC,IAAI,EACvD,CAAS,CAAC,EAAE,CAAC,YAAY,CAAC,QAAS,eACnC,CAAS,CAAC,EAAE,CAAC,YAAY,CAAC,MAAQ,GAAkB,MAAA,CAAhB,CAAS,CAAC,EAAE,CAAC,EAAE,GAGrD,SAAS,EAAW,CAAI,EAGtB,IAAK,IAFC,EAAc,EAAK,KAAK,CAAC,aAEtB,EAAI,EAAG,EAAI,EAAY,MAAM,CAAE,IACtC,CAAW,CAAC,EAAE,CAAG,CAAW,CAAC,EAAE,CAAC,EAAE,CAAC,WAAW,GAAK,CAAW,CAAC,EAAE,CAAC,KAAK,CAAC,GAG1E,OAAO,EAAY,IAAI,CAAC,IAC1B","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar allInputs = document.querySelectorAll(\"input\");\nvar allFields = document.querySelectorAll(\".field\");\nallFields.forEach(function(field) {\n    return field.insertAdjacentHTML(\"afterbegin\", \"<label>\");\n});\nvar allLabels = document.querySelectorAll(\"label\");\nfor(var i = 0; i < allInputs.length; i++){\n    allInputs[i].setAttribute(\"placeholder\", \"\".concat(textFormat(allInputs[i].name)));\n    allLabels[i].textContent = textFormat(allInputs[i].name);\n    allLabels[i].setAttribute(\"class\", \"field-label\");\n    allLabels[i].setAttribute(\"for\", \"\".concat(allInputs[i].id));\n}\nfunction textFormat(word) {\n    var splitedWord = word.split(/(?=[A-Z])/);\n    for(var i = 0; i < splitedWord.length; i++)splitedWord[i] = splitedWord[i][0].toUpperCase() + splitedWord[i].slice(1);\n    return splitedWord.join(\" \");\n}\n\n//# sourceMappingURL=index.76cc1108.js.map\n","'use strict';\n\nconst allInputs = document.querySelectorAll('input');\nconst allFields = document.querySelectorAll('.field');\n\nallFields.forEach((field) => field.insertAdjacentHTML('afterbegin', '<label>'));\n\nconst allLabels = document.querySelectorAll('label');\n\nfor (let i = 0; i < allInputs.length; i++) {\n  allInputs[i].setAttribute('placeholder', `${textFormat(allInputs[i].name)}`);\n  allLabels[i].textContent = textFormat(allInputs[i].name);\n  allLabels[i].setAttribute('class', 'field-label');\n  allLabels[i].setAttribute('for', `${allInputs[i].id}`);\n}\n\nfunction textFormat(word) {\n  const splitedWord = word.split(/(?=[A-Z])/);\n\n  for (let i = 0; i < splitedWord.length; i++) {\n    splitedWord[i] = splitedWord[i][0].toUpperCase() + splitedWord[i].slice(1);\n  }\n\n  return splitedWord.join(' ');\n}\n"],"names":["allInputs","document","querySelectorAll","allFields","forEach","field","insertAdjacentHTML","allLabels","i","length","setAttribute","concat","textFormat","name","textContent","id","word","splitedWord","split","toUpperCase","slice","join"],"version":3,"file":"index.76cc1108.js.map"}